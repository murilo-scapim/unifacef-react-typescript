{"version":3,"sources":["serviceWorker.ts","mobx/router.store.tsx","apis/economy.api.ts","containers/home/store.ts","containers/combustivel/store.ts","utils/object.util.ts","apis/star-wars.api.ts","containers/star-wars/store.ts","containers/star-wars-details/store.ts","containers/star-wars/index.tsx","containers/combustivel/index.tsx","containers/sobre/index.tsx","containers/home/index.tsx","containers/star-wars-details/index.tsx","routes/endpoints.ts","components/main-menu/index.tsx","containers/not-found/index.tsx","routes/index.tsx","components/sentry-error/index.tsx","plugins/sentry.plugin.ts","components/loading/index.tsx","apis/axios.api.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","router","RouterStore","action","path","history","push","getPrice","a","axios","request","url","home","observable","data","records","Object","values","combustivel","etanol","gasolina","isNaN","Number","swal","fire","value","event","select","target","name","assign","obj","prop","undefined","Error","split","length","e","shift","prototype","toString","call","baseURL","getFilms","getFilmById","id","starWars","films","starWarsDetails","film","StarWars","inject","observer","buildFilms","this","props","Container","Grid","divided","Row","columns","Column","Header","color","as","Content","Subheader","Card","Group","itemsPerRow","map","index","key","onClick","setHistory","Image","src","photo","wrapped","ui","size","Meta","title","Description","episode_id","React","Combustivel","submit","handleForm","Form","onSubmit","preventDefault","widths","Field","step","max","onChange","type","placeholder","Button","Sobre","Home","buildRecords","Icon","ask","StarWarsDetails","buildFilmById","params","opening_crawl","extra","director","release_date","List","relaxed","characters","character","indexChar","Item","endpoints","process","component","exact","MainMenu","handleItemClick","_","className","Menu","inverted","secondary","stackable","filter","x","item","NotFound","Routes","withRouter","Divider","hidden","route","i","render","SentryError","setState","captureException","children","REACT_APP_SENTRY_DSN","REACT_APP_VERSION","REACT_APP_NODE_ENV","init","dsn","release","environment","configureScope","scope","Loading","data-requests","loadingOn","el","document","querySelector","style","display","setAttribute","getAttribute","loadingOff","interceptors","use","Promise","reject","response","rootElement","getElementById","browserHistory","createBrowserHistory","syncHistoryWithStore","ReactDOM","store","URL","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28283002.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { RouterStore } from 'mobx-react-router';\nimport { action } from 'mobx';\n\nexport default class NewRouterStore extends RouterStore {\n\n  @action setHistory = (path: string) => {\n    this.history.push(path);\n  }\n\n}\n\nconst router = new NewRouterStore();\nexport { router };\n","import axios from 'axios';\n\nexport const getPrice = async () => {\n  return axios.request({ url: 'https://economia.awesomeapi.com.br/json/all' })\n}","import { getPrice } from './../../apis/economy.api';\nimport { action, observable } from 'mobx';\n\nexport default class HomeStore {\n  @observable records: any[] = [];\n\n  @action buildRecords = async () => {\n    const { data } = await getPrice();\n    this.records = Object.values(data);\n  }\n\n}\nconst home = new HomeStore();\nexport { home };\n","import { action, observable } from 'mobx';\nimport { assign } from '../../utils/object.util';\nimport swal from 'sweetalert2';\n\nexport default class CombustivelStore {\n\n  @observable etanol = 0;\n  @observable gasolina = 0;\n\n  @action submit = () => {\n\n    const { etanol, gasolina } = this;\n    if (!isNaN(Number(etanol)) && !isNaN(Number(gasolina))) {\n      const value = Number(etanol) / Number(gasolina);\n\n      if (value > 0.70) {\n        swal.fire('Vale a pena gasolina', '', 'success');\n      } else if (value < 0.70) {\n        swal.fire('Vale a pena etanol', '', 'success');\n      } else {\n        swal.fire('São equivalentes', '', 'info');\n      }\n    } else {\n      swal.fire('Preencha todos os dados', '', 'warning');\n    }\n  }\n\n  @action handleForm = (event: any, select?: any) => {\n    const { name, value } = select || event.target;\n    assign(this, name, value);\n  };\n\n}\nconst combustivel = new CombustivelStore();\nexport { combustivel };\n","export function assign(obj: any, prop: string | string[], value: any) {\n\n  if (prop === null || prop === undefined) {\n    throw new Error('Propertie name undefined');\n  }\n\n  if (typeof prop === 'string') {\n    prop = prop.split('.');\n  }\n\n  if (prop.length > 1) {\n    const e = prop.shift();\n    assign(obj[e!] =\n      Object.prototype.toString.call(obj[e!]) === '[object Object]'\n        ? obj[e!]\n        : {},\n      prop,\n      value);\n  } else {\n    obj[prop[0]] = value;\n  }\n}\n","import axios from 'axios';\n\nconst baseURL = 'https://star-wars-api-unifacef.herokuapp.com';\n\nexport const getFilms = async () => {\n  return axios.request({ baseURL, url: 'films' })\n}\n\nexport const getFilmById = async (id: number) => {\n  return axios.request({ baseURL, url: `films/${id}` })\n}","import { action, observable } from 'mobx';\nimport { getFilms } from '../../apis/star-wars.api';\n\nexport default class StarWarsStore {\n  @observable films: any[] = [];\n\n  @action buildFilms = async () => {\n    const { data } = await getFilms();\n    this.films = data;\n  }\n\n}\nconst starWars = new StarWarsStore();\nexport { starWars };\n","import { action, observable } from 'mobx';\nimport { getFilmById } from '../../apis/star-wars.api';\n\nexport default class StarWarsDetailsStore {\n  @observable film: any = {};\n\n  @action buildFilmById = async (id: number) => {\n    const { data } = await getFilmById(id);\n    this.film = data;\n  }\n\n}\nconst starWarsDetails = new StarWarsDetailsStore();\nexport { starWarsDetails };\n","import * as React from 'react';\nimport { Container, Card, Grid, Header, Image } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\nimport NewRouterStore from '../../mobx/router.store';\nimport StarWarsStore from './store';\n\ninterface Props {\n  router: NewRouterStore;\n  starWars: StarWarsStore;\n}\n\n@inject('router', 'starWars')\n@observer\nexport default class StarWars extends React.Component<Props> {\n\n  async componentDidMount() {\n    const { buildFilms } = this.props.starWars;\n    await buildFilms();\n  }\n\n  render() {\n\n    const openDetails = (id: number) => {\n      this.props.router.setHistory(`/star-wars/${id}`)\n    }\n\n    const { films } = this.props.starWars;\n\n    return (\n      <Container>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Header color='blue' as='h2'>\n                <Header.Content>\n                  Star Wars\n                 <Header.Subheader>Lista de filmes</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Card.Group itemsPerRow={2}>\n\n          {films.map((film, index) => {\n            return (\n              <Card key={index} onClick={() => openDetails(film.id)}>\n                <Image src={film.photo} wrapped ui={false} size='small' />\n                <Card.Content>\n                  <Card.Meta>{film.title}</Card.Meta>\n                  <Card.Description>Episode {film.episode_id.toString()}</Card.Description>\n                </Card.Content>\n              </Card>)\n          })}\n\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Container, Grid, Header, Form, Button } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\nimport NewRouterStore from '../../mobx/router.store';\nimport CombustivelStore from './store';\n\ninterface Props {\n  router: NewRouterStore;\n  combustivel: CombustivelStore;\n}\n\n@inject('router', 'combustivel')\n@observer\nexport default class Combustivel extends React.Component<Props> {\n\n  render() {\n\n    const { etanol, gasolina, submit, handleForm } = this.props.combustivel;\n\n    const submitForm = (e) => {\n      e.preventDefault();\n      submit();\n    }\n\n    return (\n      <Container>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Header color='blue' as='h2'>\n                <Header.Content>\n                  Combustível\n                 <Header.Subheader>Alcool ou Gasolina?</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Form onSubmit={submitForm}>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <label>Preço da Gasolina</label>\n              <input step=\"any\" max=\"99\" value={gasolina} name='gasolina' onChange={handleForm} type='number' placeholder='ex: R$ 4.05' />\n            </Form.Field>\n            <Form.Field>\n              <label>Preço do Etanol</label>\n              <input step=\"any\" max=\"99\" value={etanol} name='etanol' onChange={handleForm} type='number' placeholder='ex: R$ 2.00' />\n            </Form.Field>\n          </Form.Group>\n          <Button type='submit'>Consultar</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Container, Grid, Header } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\nimport NewRouterStore from '../../mobx/router.store';\n\ninterface Props {\n  router: NewRouterStore;\n}\n\n@inject('router')\n@observer\nexport default class Sobre extends React.Component<Props> {\n  render() {\n    return (\n      <Container>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Header color='blue' as='h2'>\n                <Header.Content>\n                  Sobre\n                 <Header.Subheader>Um pouco sobre mim</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Card, Container, Grid, Header, Icon } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\n\nimport HomeStore from './store';\nimport NewRouterStore from '../../mobx/router.store';\n\ninterface Props {\n  router: NewRouterStore;\n  home: HomeStore;\n}\n\n@inject('router', 'home')\n@observer\nexport default class Home extends React.Component<Props> {\n\n  async componentDidMount() {\n    const { buildRecords } = this.props.home;\n    await buildRecords();\n  }\n\n  render() {\n\n    const { records } = this.props.home;\n\n    return (\n      <Container>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Header color='blue' as='h2'>\n                <Header.Content>\n                  Home\n                 <Header.Subheader>Moedas agora</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Card.Group itemsPerRow={2}>\n          {records.map((e, index) => {\n            return (\n              <Card key={index}>\n                <Card.Content>\n                  <Card.Meta><Icon name='dollar' />{e.name}</Card.Meta>\n                  <Card.Description>R$ {e.ask}</Card.Description>\n                </Card.Content>\n              </Card>)\n          })}\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Container, Card, Grid, Header, Image, List } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\nimport NewRouterStore from '../../mobx/router.store';\nimport StarWarsDetailsStore from './store';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props {\n  router: NewRouterStore;\n  starWarsDetails: StarWarsDetailsStore;\n}\n\n@inject('router', 'starWarsDetails')\n@observer\nexport default class StarWarsDetails extends React.Component<RouteComponentProps<{ id: string }> & Props> {\n\n  async componentDidMount() {\n    const { buildFilmById } = this.props.starWarsDetails;\n    const id = Number(this.props.match.params.id);\n    await buildFilmById(id);\n  }\n\n  render() {\n\n    const { film } = this.props.starWarsDetails;\n\n    return (\n      <Container>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <Header color='blue' as='h2'>\n                <Header.Content>\n                  Star Wars\n                 <Header.Subheader>Detalhe do filme</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Card.Group itemsPerRow={2}>\n          <Card>\n            <Image src={film.photo} wrapped ui={false} size='small' />\n            <Card.Content>\n              <Card.Meta>{film.title} - Episode {film.episode_id}</Card.Meta>\n              <Card.Description>{film.opening_crawl}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <p>Director: {film.director}</p>\n              <p>Release Date: {film.release_date}</p>\n            </Card.Content>\n\n            <Card.Content>\n              <p>Personagens:</p>\n              <List divided relaxed>\n                {film.characters?.map((character, indexChar) => {\n                  return (\n                    <List.Item>\n                      {character.name}\n                    </List.Item>)\n                })}\n              </List>\n\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n","import { RouteProps } from 'react-router-dom';\nimport StarWars from '../containers/star-wars';\nimport Combustivel from '../containers/combustivel';\nimport Sobre from '../containers/sobre';\nimport Home from '../containers/home';\nimport StarWarsDetails from '../containers/star-wars-details';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\ninterface EndPointsProps extends RouteProps {\n  name?: string\n}\n\nexport const endpoints: EndPointsProps[] = [\n  { path: `${publicUrl}/`, component: Home, exact: true },\n  { path: `${publicUrl}/home`, name: 'Home', component: Home, exact: true },\n  { path: `${publicUrl}/star-wars/:id`, component: StarWarsDetails },\n  { path: `${publicUrl}/star-wars/`, name: 'Star Wars', component: StarWars, exact: true },\n  { path: `${publicUrl}/combustivel`, name: 'Combustível', component: Combustivel, exact: true },\n  { path: `${publicUrl}/sobre`, name: 'Sobre', component: Sobre, exact: true },\n];","import * as React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { inject, observer } from 'mobx-react';\nimport NewRouterStore from '../../mobx/router.store';\nimport { endpoints } from '../../routes/endpoints';\n\ninterface Props {\n  router?: NewRouterStore;\n}\n\n@inject('router')\n@observer\nexport default class MainMenu extends React.Component<Props> {\n\n  handleItemClick = (_: any, { url }: any) => {\n    const { setHistory } = this.props.router!;\n    return setHistory(url);\n  };\n\n  render() {\n\n    return (\n      <>\n        <div className={'nav'}>\n          <Menu color={'blue'} inverted={true} size='large' secondary={true} stackable={true}>\n            {endpoints.filter(x => x.name).map((item, index) => {\n              return <Menu.Item\n                key={index}\n                name={item.path?.toString()}\n                url={item.path!}\n                onClick={this.handleItemClick}>\n                {item.name}\n              </Menu.Item>\n            })}\n          </Menu>\n        </div>\n      </>\n    );\n  }\n}","import * as React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nexport default class NotFound extends React.Component {\n\n  render() {\n    return (\n      <Container><p>Página não encontrada!</p></Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  Route,\n  withRouter,\n  Switch,\n} from 'react-router-dom';\nimport MainMenu from '../components/main-menu';\nimport { Divider } from 'semantic-ui-react';\nimport NotFound from '../containers/not-found';\nimport { endpoints } from './endpoints';\n\n// @ts-ignore\n@withRouter\n@observer\nexport default class Routes extends React.Component {\n\n  render() {\n    return (\n      <>\n        <MainMenu />\n        <Divider hidden={true} />\n        <Switch>\n          {endpoints.map((route, i) => (\n            <Route key={i} {...route} />)\n          )}\n          <Route path='*' exact={true} render={props => <NotFound {...props} />} />\n        </Switch>\n      </>\n    );\n  }\n}","import * as React from 'react';\nimport { captureException } from '@sentry/browser';\n\nexport class SentryError extends React.Component<{}, { error: any }> {\n  constructor(props: any) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  componentDidCatch(error: any) {\n    this.setState({ error });\n    captureException(error);\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className='snap'>\n          <p>Algum erro crítico não esperado aconteceu.</p>\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n","import { configureScope, init } from '@sentry/browser';\n(() => {\n\n  // Desativa o plugin em localhost\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return;\n  }\n\n  const { REACT_APP_SENTRY_DSN, REACT_APP_VERSION, REACT_APP_NODE_ENV } = process.env;\n  if (!REACT_APP_SENTRY_DSN) {\n    return;\n  }\n\n  init({ dsn: REACT_APP_SENTRY_DSN, release: REACT_APP_VERSION, environment: REACT_APP_NODE_ENV });\n  configureScope(scope => {\n  });\n\n})();","import * as React from 'react';\nimport './style.css';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div id='loadingSpinner' className='loadingWall' data-requests='0'>\n        <div className='loadingCircle' />\n      </div>);\n  }\n}\n\nexport const loadingOn = () => {\n  const el = (document.querySelector('#loadingSpinner')) as any;\n  if (el === null) {\n    return;\n  }\n\n  el.style.display = 'block';\n  el.setAttribute('data-requests', Number(el.getAttribute('data-requests')) + 1);\n};\n\nexport const loadingOff = () => {\n  const el = (document.querySelector('#loadingSpinner')) as any;\n  if (el === null) {\n    return;\n  }\n  if (Number(el.getAttribute('data-requests')) > 0) {\n    el.setAttribute('data-requests', Number(el.getAttribute('data-requests')) - 1);\n  }\n\n  if (Number(el.getAttribute('data-requests')) === 0) {\n    el.style.display = 'none';\n    return;\n  }\n\n};\n","import { loadingOn, loadingOff } from '../components/loading/index';\nimport axios from 'axios';\n\naxios.interceptors.request.use(async (config) => {\n  loadingOn();\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\n\naxios.interceptors.response.use(async (config) => {\n  loadingOff();\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport * as store from './mobx';\nimport Routes from './routes';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'mobx-react';\nimport { router } from './mobx/';\nimport { Router } from 'react-router-dom';\nimport { SentryError } from './components/sentry-error';\nimport { syncHistoryWithStore } from 'mobx-react-router';\nimport './index.css';\nimport './plugins/sentry.plugin';\nimport 'semantic-ui-css/semantic.min.css';\nimport Loading from './components/loading';\nimport './apis/axios.api';\n\nconst rootElement = document.getElementById('root');\nconst browserHistory = createBrowserHistory();\n\nconst history = syncHistoryWithStore(browserHistory, router);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...store}>\n      <Loading />\n      <Router history={history}>\n        <SentryError>\n          <Routes />\n        </SentryError>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\nserviceWorker.register();"],"sourceRoot":""}